// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: common/getuserinfo/GetUserInfo.proto

package getuserinfo

import (
	_ "github.com/qtopie/gofutuapi/gen/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateType int32

const (
	UpdateType_UpdateType_None   UpdateType = 0 //无需升级
	UpdateType_UpdateType_Advice UpdateType = 1 //建议升级
	UpdateType_UpdateType_Force  UpdateType = 2 //强制升级
)

// Enum value maps for UpdateType.
var (
	UpdateType_name = map[int32]string{
		0: "UpdateType_None",
		1: "UpdateType_Advice",
		2: "UpdateType_Force",
	}
	UpdateType_value = map[string]int32{
		"UpdateType_None":   0,
		"UpdateType_Advice": 1,
		"UpdateType_Force":  2,
	}
)

func (x UpdateType) Enum() *UpdateType {
	p := new(UpdateType)
	*p = x
	return p
}

func (x UpdateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_getuserinfo_GetUserInfo_proto_enumTypes[0].Descriptor()
}

func (UpdateType) Type() protoreflect.EnumType {
	return &file_common_getuserinfo_GetUserInfo_proto_enumTypes[0]
}

func (x UpdateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *UpdateType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = UpdateType(num)
	return nil
}

// Deprecated: Use UpdateType.Descriptor instead.
func (UpdateType) EnumDescriptor() ([]byte, []int) {
	return file_common_getuserinfo_GetUserInfo_proto_rawDescGZIP(), []int{0}
}

type UserInfoField int32

const (
	UserInfoField_UserInfoField_Basic      UserInfoField = 1  //昵称，用户头像，牛牛号
	UserInfoField_UserInfoField_API        UserInfoField = 2  //API权限信息
	UserInfoField_UserInfoField_QotRight   UserInfoField = 4  //市场的行情权限
	UserInfoField_UserInfoField_Disclaimer UserInfoField = 8  //免责
	UserInfoField_UserInfoField_Update     UserInfoField = 16 //升级类型
	UserInfoField_UserInfoField_WebKey     UserInfoField = 2048
)

// Enum value maps for UserInfoField.
var (
	UserInfoField_name = map[int32]string{
		1:    "UserInfoField_Basic",
		2:    "UserInfoField_API",
		4:    "UserInfoField_QotRight",
		8:    "UserInfoField_Disclaimer",
		16:   "UserInfoField_Update",
		2048: "UserInfoField_WebKey",
	}
	UserInfoField_value = map[string]int32{
		"UserInfoField_Basic":      1,
		"UserInfoField_API":        2,
		"UserInfoField_QotRight":   4,
		"UserInfoField_Disclaimer": 8,
		"UserInfoField_Update":     16,
		"UserInfoField_WebKey":     2048,
	}
)

func (x UserInfoField) Enum() *UserInfoField {
	p := new(UserInfoField)
	*p = x
	return p
}

func (x UserInfoField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserInfoField) Descriptor() protoreflect.EnumDescriptor {
	return file_common_getuserinfo_GetUserInfo_proto_enumTypes[1].Descriptor()
}

func (UserInfoField) Type() protoreflect.EnumType {
	return &file_common_getuserinfo_GetUserInfo_proto_enumTypes[1]
}

func (x UserInfoField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *UserInfoField) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = UserInfoField(num)
	return nil
}

// Deprecated: Use UserInfoField.Descriptor instead.
func (UserInfoField) EnumDescriptor() ([]byte, []int) {
	return file_common_getuserinfo_GetUserInfo_proto_rawDescGZIP(), []int{1}
}

type C2S struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Flag          *int32                 `protobuf:"varint,2,opt,name=flag" json:"flag,omitempty"` //UserInfoField集合，不设置默认返回全部信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *C2S) Reset() {
	*x = C2S{}
	mi := &file_common_getuserinfo_GetUserInfo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *C2S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S) ProtoMessage() {}

func (x *C2S) ProtoReflect() protoreflect.Message {
	mi := &file_common_getuserinfo_GetUserInfo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S.ProtoReflect.Descriptor instead.
func (*C2S) Descriptor() ([]byte, []int) {
	return file_common_getuserinfo_GetUserInfo_proto_rawDescGZIP(), []int{0}
}

func (x *C2S) GetFlag() int32 {
	if x != nil && x.Flag != nil {
		return *x.Flag
	}
	return 0
}

type S2C struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	NickName              *string                `protobuf:"bytes,1,opt,name=nickName" json:"nickName,omitempty"`                            //用户昵称
	AvatarUrl             *string                `protobuf:"bytes,2,opt,name=avatarUrl" json:"avatarUrl,omitempty"`                          //用户头像url
	ApiLevel              *string                `protobuf:"bytes,3,opt,name=apiLevel" json:"apiLevel,omitempty"`                            //api用户等级描述, 已在2.10版本之后废弃
	HkQotRight            *int32                 `protobuf:"varint,4,opt,name=hkQotRight" json:"hkQotRight,omitempty"`                       //港股行情权限, QotRight
	UsQotRight            *int32                 `protobuf:"varint,5,opt,name=usQotRight" json:"usQotRight,omitempty"`                       //美股行情权限, QotRight
	CnQotRight            *int32                 `protobuf:"varint,6,opt,name=cnQotRight" json:"cnQotRight,omitempty"`                       //A股行情权限, QotRight // 废弃，使用shQotRight和szQotRight
	IsNeedAgreeDisclaimer *bool                  `protobuf:"varint,7,opt,name=isNeedAgreeDisclaimer" json:"isNeedAgreeDisclaimer,omitempty"` //已开户用户需要同意免责声明，未开户或已同意的用户返回false
	UserID                *int64                 `protobuf:"varint,8,opt,name=userID" json:"userID,omitempty"`                               //用户牛牛号
	UpdateType            *int32                 `protobuf:"varint,9,opt,name=updateType" json:"updateType,omitempty"`                       //升级类型，UpdateType
	WebKey                *string                `protobuf:"bytes,10,opt,name=webKey" json:"webKey,omitempty"`
	WebJumpUrlHead        *string                `protobuf:"bytes,18,opt,name=webJumpUrlHead" json:"webJumpUrlHead,omitempty"`
	HkOptionQotRight      *int32                 `protobuf:"varint,11,opt,name=hkOptionQotRight" json:"hkOptionQotRight,omitempty"`           //港股期权行情权限, Qot_Common.QotRight
	HasUSOptionQotRight   *bool                  `protobuf:"varint,12,opt,name=hasUSOptionQotRight" json:"hasUSOptionQotRight,omitempty"`     //是否有美股期权行情权限
	HkFutureQotRight      *int32                 `protobuf:"varint,13,opt,name=hkFutureQotRight" json:"hkFutureQotRight,omitempty"`           //港股期货行情权限, Qot_Common.QotRight
	SubQuota              *int32                 `protobuf:"varint,14,opt,name=subQuota" json:"subQuota,omitempty"`                           //订阅额度
	HistoryKLQuota        *int32                 `protobuf:"varint,15,opt,name=historyKLQuota" json:"historyKLQuota,omitempty"`               //历史K线额度
	UsFutureQotRight      *int32                 `protobuf:"varint,16,opt,name=usFutureQotRight" json:"usFutureQotRight,omitempty"`           //美股期货行情权限, Qot_Common.QotRight(已废弃)
	UsOptionQotRight      *int32                 `protobuf:"varint,17,opt,name=usOptionQotRight" json:"usOptionQotRight,omitempty"`           //美股期货行情权限, Qot_Common.QotRight
	UserAttribution       *int32                 `protobuf:"varint,19,opt,name=userAttribution" json:"userAttribution,omitempty"`             //用户注册归属地, Common.UserAttribution
	UpdateWhatsNew        *string                `protobuf:"bytes,20,opt,name=updateWhatsNew" json:"updateWhatsNew,omitempty"`                //升级提示
	UsIndexQotRight       *int32                 `protobuf:"varint,21,opt,name=usIndexQotRight" json:"usIndexQotRight,omitempty"`             //美股指数行情权限, Qot_Common.QotRight
	UsOtcQotRight         *int32                 `protobuf:"varint,22,opt,name=usOtcQotRight" json:"usOtcQotRight,omitempty"`                 //美股OTC市场行情权限, Qot_Common.QotRight
	UsCMEFutureQotRight   *int32                 `protobuf:"varint,23,opt,name=usCMEFutureQotRight" json:"usCMEFutureQotRight,omitempty"`     //美股CME期货行情权限, Qot_Common.QotRight
	UsCBOTFutureQotRight  *int32                 `protobuf:"varint,24,opt,name=usCBOTFutureQotRight" json:"usCBOTFutureQotRight,omitempty"`   //美股CBOT期货行情权限, Qot_Common.QotRight
	UsNYMEXFutureQotRight *int32                 `protobuf:"varint,25,opt,name=usNYMEXFutureQotRight" json:"usNYMEXFutureQotRight,omitempty"` //美股NYMEX期货行情权限, Qot_Common.QotRight
	UsCOMEXFutureQotRight *int32                 `protobuf:"varint,26,opt,name=usCOMEXFutureQotRight" json:"usCOMEXFutureQotRight,omitempty"` //美股COMEX期货行情权限, Qot_Common.QotRight
	UsCBOEFutureQotRight  *int32                 `protobuf:"varint,27,opt,name=usCBOEFutureQotRight" json:"usCBOEFutureQotRight,omitempty"`   //美股CBOE期货行情权限, Qot_Common.QotRight
	SgFutureQotRight      *int32                 `protobuf:"varint,28,opt,name=sgFutureQotRight" json:"sgFutureQotRight,omitempty"`           //新加坡市场期货行情权限, Qot_Common.QotRight
	JpFutureQotRight      *int32                 `protobuf:"varint,29,opt,name=jpFutureQotRight" json:"jpFutureQotRight,omitempty"`           //日本市场期货行情权限, Qot_Common.QotRight
	IsAppNNOrMM           *bool                  `protobuf:"varint,30,opt,name=isAppNNOrMM" json:"isAppNNOrMM,omitempty"`                     //true:NN false:MM
	ShQotRight            *int32                 `protobuf:"varint,31,opt,name=shQotRight" json:"shQotRight,omitempty"`                       //上海市场行情权限, Qot_Common.QotRight
	SzQotRight            *int32                 `protobuf:"varint,32,opt,name=szQotRight" json:"szQotRight,omitempty"`                       //深圳市场行情权限, Qot_Common.QotRight
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *S2C) Reset() {
	*x = S2C{}
	mi := &file_common_getuserinfo_GetUserInfo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S2C) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C) ProtoMessage() {}

func (x *S2C) ProtoReflect() protoreflect.Message {
	mi := &file_common_getuserinfo_GetUserInfo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C.ProtoReflect.Descriptor instead.
func (*S2C) Descriptor() ([]byte, []int) {
	return file_common_getuserinfo_GetUserInfo_proto_rawDescGZIP(), []int{1}
}

func (x *S2C) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *S2C) GetAvatarUrl() string {
	if x != nil && x.AvatarUrl != nil {
		return *x.AvatarUrl
	}
	return ""
}

func (x *S2C) GetApiLevel() string {
	if x != nil && x.ApiLevel != nil {
		return *x.ApiLevel
	}
	return ""
}

func (x *S2C) GetHkQotRight() int32 {
	if x != nil && x.HkQotRight != nil {
		return *x.HkQotRight
	}
	return 0
}

func (x *S2C) GetUsQotRight() int32 {
	if x != nil && x.UsQotRight != nil {
		return *x.UsQotRight
	}
	return 0
}

func (x *S2C) GetCnQotRight() int32 {
	if x != nil && x.CnQotRight != nil {
		return *x.CnQotRight
	}
	return 0
}

func (x *S2C) GetIsNeedAgreeDisclaimer() bool {
	if x != nil && x.IsNeedAgreeDisclaimer != nil {
		return *x.IsNeedAgreeDisclaimer
	}
	return false
}

func (x *S2C) GetUserID() int64 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *S2C) GetUpdateType() int32 {
	if x != nil && x.UpdateType != nil {
		return *x.UpdateType
	}
	return 0
}

func (x *S2C) GetWebKey() string {
	if x != nil && x.WebKey != nil {
		return *x.WebKey
	}
	return ""
}

func (x *S2C) GetWebJumpUrlHead() string {
	if x != nil && x.WebJumpUrlHead != nil {
		return *x.WebJumpUrlHead
	}
	return ""
}

func (x *S2C) GetHkOptionQotRight() int32 {
	if x != nil && x.HkOptionQotRight != nil {
		return *x.HkOptionQotRight
	}
	return 0
}

func (x *S2C) GetHasUSOptionQotRight() bool {
	if x != nil && x.HasUSOptionQotRight != nil {
		return *x.HasUSOptionQotRight
	}
	return false
}

func (x *S2C) GetHkFutureQotRight() int32 {
	if x != nil && x.HkFutureQotRight != nil {
		return *x.HkFutureQotRight
	}
	return 0
}

func (x *S2C) GetSubQuota() int32 {
	if x != nil && x.SubQuota != nil {
		return *x.SubQuota
	}
	return 0
}

func (x *S2C) GetHistoryKLQuota() int32 {
	if x != nil && x.HistoryKLQuota != nil {
		return *x.HistoryKLQuota
	}
	return 0
}

func (x *S2C) GetUsFutureQotRight() int32 {
	if x != nil && x.UsFutureQotRight != nil {
		return *x.UsFutureQotRight
	}
	return 0
}

func (x *S2C) GetUsOptionQotRight() int32 {
	if x != nil && x.UsOptionQotRight != nil {
		return *x.UsOptionQotRight
	}
	return 0
}

func (x *S2C) GetUserAttribution() int32 {
	if x != nil && x.UserAttribution != nil {
		return *x.UserAttribution
	}
	return 0
}

func (x *S2C) GetUpdateWhatsNew() string {
	if x != nil && x.UpdateWhatsNew != nil {
		return *x.UpdateWhatsNew
	}
	return ""
}

func (x *S2C) GetUsIndexQotRight() int32 {
	if x != nil && x.UsIndexQotRight != nil {
		return *x.UsIndexQotRight
	}
	return 0
}

func (x *S2C) GetUsOtcQotRight() int32 {
	if x != nil && x.UsOtcQotRight != nil {
		return *x.UsOtcQotRight
	}
	return 0
}

func (x *S2C) GetUsCMEFutureQotRight() int32 {
	if x != nil && x.UsCMEFutureQotRight != nil {
		return *x.UsCMEFutureQotRight
	}
	return 0
}

func (x *S2C) GetUsCBOTFutureQotRight() int32 {
	if x != nil && x.UsCBOTFutureQotRight != nil {
		return *x.UsCBOTFutureQotRight
	}
	return 0
}

func (x *S2C) GetUsNYMEXFutureQotRight() int32 {
	if x != nil && x.UsNYMEXFutureQotRight != nil {
		return *x.UsNYMEXFutureQotRight
	}
	return 0
}

func (x *S2C) GetUsCOMEXFutureQotRight() int32 {
	if x != nil && x.UsCOMEXFutureQotRight != nil {
		return *x.UsCOMEXFutureQotRight
	}
	return 0
}

func (x *S2C) GetUsCBOEFutureQotRight() int32 {
	if x != nil && x.UsCBOEFutureQotRight != nil {
		return *x.UsCBOEFutureQotRight
	}
	return 0
}

func (x *S2C) GetSgFutureQotRight() int32 {
	if x != nil && x.SgFutureQotRight != nil {
		return *x.SgFutureQotRight
	}
	return 0
}

func (x *S2C) GetJpFutureQotRight() int32 {
	if x != nil && x.JpFutureQotRight != nil {
		return *x.JpFutureQotRight
	}
	return 0
}

func (x *S2C) GetIsAppNNOrMM() bool {
	if x != nil && x.IsAppNNOrMM != nil {
		return *x.IsAppNNOrMM
	}
	return false
}

func (x *S2C) GetShQotRight() int32 {
	if x != nil && x.ShQotRight != nil {
		return *x.ShQotRight
	}
	return 0
}

func (x *S2C) GetSzQotRight() int32 {
	if x != nil && x.SzQotRight != nil {
		return *x.SzQotRight
	}
	return 0
}

type Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	C2S           *C2S                   `protobuf:"bytes,1,req,name=c2s" json:"c2s,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_common_getuserinfo_GetUserInfo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_common_getuserinfo_GetUserInfo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_common_getuserinfo_GetUserInfo_proto_rawDescGZIP(), []int{2}
}

func (x *Request) GetC2S() *C2S {
	if x != nil {
		return x.C2S
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RetType       *int32                 `protobuf:"varint,1,req,name=retType,def=-400" json:"retType,omitempty"` //返回结果，参见Common.RetType的枚举定义
	RetMsg        *string                `protobuf:"bytes,2,opt,name=retMsg" json:"retMsg,omitempty"`             //返回结果描述
	ErrCode       *int32                 `protobuf:"varint,3,opt,name=errCode" json:"errCode,omitempty"`          //错误码，客户端一般通过retType和retMsg来判断结果和详情，errCode只做日志记录，仅在个别协议失败时对账用
	S2C           *S2C                   `protobuf:"bytes,4,opt,name=s2c" json:"s2c,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for Response fields.
const (
	Default_Response_RetType = int32(-400)
)

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_common_getuserinfo_GetUserInfo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_common_getuserinfo_GetUserInfo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_common_getuserinfo_GetUserInfo_proto_rawDescGZIP(), []int{3}
}

func (x *Response) GetRetType() int32 {
	if x != nil && x.RetType != nil {
		return *x.RetType
	}
	return Default_Response_RetType
}

func (x *Response) GetRetMsg() string {
	if x != nil && x.RetMsg != nil {
		return *x.RetMsg
	}
	return ""
}

func (x *Response) GetErrCode() int32 {
	if x != nil && x.ErrCode != nil {
		return *x.ErrCode
	}
	return 0
}

func (x *Response) GetS2C() *S2C {
	if x != nil {
		return x.S2C
	}
	return nil
}

var File_common_getuserinfo_GetUserInfo_proto protoreflect.FileDescriptor

const file_common_getuserinfo_GetUserInfo_proto_rawDesc = "" +
	"\n" +
	"$common/getuserinfo/GetUserInfo.proto\x12\vGetUserInfo\x1a\x13common/Common.proto\"\x19\n" +
	"\x03C2S\x12\x12\n" +
	"\x04flag\x18\x02 \x01(\x05R\x04flag\"\xf1\t\n" +
	"\x03S2C\x12\x1a\n" +
	"\bnickName\x18\x01 \x01(\tR\bnickName\x12\x1c\n" +
	"\tavatarUrl\x18\x02 \x01(\tR\tavatarUrl\x12\x1a\n" +
	"\bapiLevel\x18\x03 \x01(\tR\bapiLevel\x12\x1e\n" +
	"\n" +
	"hkQotRight\x18\x04 \x01(\x05R\n" +
	"hkQotRight\x12\x1e\n" +
	"\n" +
	"usQotRight\x18\x05 \x01(\x05R\n" +
	"usQotRight\x12\x1e\n" +
	"\n" +
	"cnQotRight\x18\x06 \x01(\x05R\n" +
	"cnQotRight\x124\n" +
	"\x15isNeedAgreeDisclaimer\x18\a \x01(\bR\x15isNeedAgreeDisclaimer\x12\x16\n" +
	"\x06userID\x18\b \x01(\x03R\x06userID\x12\x1e\n" +
	"\n" +
	"updateType\x18\t \x01(\x05R\n" +
	"updateType\x12\x16\n" +
	"\x06webKey\x18\n" +
	" \x01(\tR\x06webKey\x12&\n" +
	"\x0ewebJumpUrlHead\x18\x12 \x01(\tR\x0ewebJumpUrlHead\x12*\n" +
	"\x10hkOptionQotRight\x18\v \x01(\x05R\x10hkOptionQotRight\x120\n" +
	"\x13hasUSOptionQotRight\x18\f \x01(\bR\x13hasUSOptionQotRight\x12*\n" +
	"\x10hkFutureQotRight\x18\r \x01(\x05R\x10hkFutureQotRight\x12\x1a\n" +
	"\bsubQuota\x18\x0e \x01(\x05R\bsubQuota\x12&\n" +
	"\x0ehistoryKLQuota\x18\x0f \x01(\x05R\x0ehistoryKLQuota\x12*\n" +
	"\x10usFutureQotRight\x18\x10 \x01(\x05R\x10usFutureQotRight\x12*\n" +
	"\x10usOptionQotRight\x18\x11 \x01(\x05R\x10usOptionQotRight\x12(\n" +
	"\x0fuserAttribution\x18\x13 \x01(\x05R\x0fuserAttribution\x12&\n" +
	"\x0eupdateWhatsNew\x18\x14 \x01(\tR\x0eupdateWhatsNew\x12(\n" +
	"\x0fusIndexQotRight\x18\x15 \x01(\x05R\x0fusIndexQotRight\x12$\n" +
	"\rusOtcQotRight\x18\x16 \x01(\x05R\rusOtcQotRight\x120\n" +
	"\x13usCMEFutureQotRight\x18\x17 \x01(\x05R\x13usCMEFutureQotRight\x122\n" +
	"\x14usCBOTFutureQotRight\x18\x18 \x01(\x05R\x14usCBOTFutureQotRight\x124\n" +
	"\x15usNYMEXFutureQotRight\x18\x19 \x01(\x05R\x15usNYMEXFutureQotRight\x124\n" +
	"\x15usCOMEXFutureQotRight\x18\x1a \x01(\x05R\x15usCOMEXFutureQotRight\x122\n" +
	"\x14usCBOEFutureQotRight\x18\x1b \x01(\x05R\x14usCBOEFutureQotRight\x12*\n" +
	"\x10sgFutureQotRight\x18\x1c \x01(\x05R\x10sgFutureQotRight\x12*\n" +
	"\x10jpFutureQotRight\x18\x1d \x01(\x05R\x10jpFutureQotRight\x12 \n" +
	"\visAppNNOrMM\x18\x1e \x01(\bR\visAppNNOrMM\x12\x1e\n" +
	"\n" +
	"shQotRight\x18\x1f \x01(\x05R\n" +
	"shQotRight\x12\x1e\n" +
	"\n" +
	"szQotRight\x18  \x01(\x05R\n" +
	"szQotRight\"-\n" +
	"\aRequest\x12\"\n" +
	"\x03c2s\x18\x01 \x02(\v2\x10.GetUserInfo.C2SR\x03c2s\"\x80\x01\n" +
	"\bResponse\x12\x1e\n" +
	"\aretType\x18\x01 \x02(\x05:\x04-400R\aretType\x12\x16\n" +
	"\x06retMsg\x18\x02 \x01(\tR\x06retMsg\x12\x18\n" +
	"\aerrCode\x18\x03 \x01(\x05R\aerrCode\x12\"\n" +
	"\x03s2c\x18\x04 \x01(\v2\x10.GetUserInfo.S2CR\x03s2c*N\n" +
	"\n" +
	"UpdateType\x12\x13\n" +
	"\x0fUpdateType_None\x10\x00\x12\x15\n" +
	"\x11UpdateType_Advice\x10\x01\x12\x14\n" +
	"\x10UpdateType_Force\x10\x02*\xae\x01\n" +
	"\rUserInfoField\x12\x17\n" +
	"\x13UserInfoField_Basic\x10\x01\x12\x15\n" +
	"\x11UserInfoField_API\x10\x02\x12\x1a\n" +
	"\x16UserInfoField_QotRight\x10\x04\x12\x1c\n" +
	"\x18UserInfoField_Disclaimer\x10\b\x12\x18\n" +
	"\x14UserInfoField_Update\x10\x10\x12\x19\n" +
	"\x14UserInfoField_WebKey\x10\x80\x10BI\n" +
	"\x13com.futu.openapi.pbZ2github.com/qtopie/gofutuapi/gen/common/getuserinfo"

var (
	file_common_getuserinfo_GetUserInfo_proto_rawDescOnce sync.Once
	file_common_getuserinfo_GetUserInfo_proto_rawDescData []byte
)

func file_common_getuserinfo_GetUserInfo_proto_rawDescGZIP() []byte {
	file_common_getuserinfo_GetUserInfo_proto_rawDescOnce.Do(func() {
		file_common_getuserinfo_GetUserInfo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_getuserinfo_GetUserInfo_proto_rawDesc), len(file_common_getuserinfo_GetUserInfo_proto_rawDesc)))
	})
	return file_common_getuserinfo_GetUserInfo_proto_rawDescData
}

var file_common_getuserinfo_GetUserInfo_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_common_getuserinfo_GetUserInfo_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_common_getuserinfo_GetUserInfo_proto_goTypes = []any{
	(UpdateType)(0),    // 0: GetUserInfo.UpdateType
	(UserInfoField)(0), // 1: GetUserInfo.UserInfoField
	(*C2S)(nil),        // 2: GetUserInfo.C2S
	(*S2C)(nil),        // 3: GetUserInfo.S2C
	(*Request)(nil),    // 4: GetUserInfo.Request
	(*Response)(nil),   // 5: GetUserInfo.Response
}
var file_common_getuserinfo_GetUserInfo_proto_depIdxs = []int32{
	2, // 0: GetUserInfo.Request.c2s:type_name -> GetUserInfo.C2S
	3, // 1: GetUserInfo.Response.s2c:type_name -> GetUserInfo.S2C
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_common_getuserinfo_GetUserInfo_proto_init() }
func file_common_getuserinfo_GetUserInfo_proto_init() {
	if File_common_getuserinfo_GetUserInfo_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_getuserinfo_GetUserInfo_proto_rawDesc), len(file_common_getuserinfo_GetUserInfo_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_getuserinfo_GetUserInfo_proto_goTypes,
		DependencyIndexes: file_common_getuserinfo_GetUserInfo_proto_depIdxs,
		EnumInfos:         file_common_getuserinfo_GetUserInfo_proto_enumTypes,
		MessageInfos:      file_common_getuserinfo_GetUserInfo_proto_msgTypes,
	}.Build()
	File_common_getuserinfo_GetUserInfo_proto = out.File
	file_common_getuserinfo_GetUserInfo_proto_goTypes = nil
	file_common_getuserinfo_GetUserInfo_proto_depIdxs = nil
}
