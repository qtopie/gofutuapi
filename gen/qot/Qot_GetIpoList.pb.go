// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: qot/Qot_GetIpoList.proto

package qotgetipolist

import (
	common "./qot/common"
	_ "github.com/qtopie/gofutuapi/gen/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Ipo基本数据
type BasicIpoData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Security      *common.Security       `protobuf:"bytes,1,req,name=security" json:"security,omitempty"`             // Qot_Common::QotMarket 股票市场，支持港股、美股和 A股。其中，A 股整体返回，不区分沪股和深股。
	Name          *string                `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`                     // 股票名称
	ListTime      *string                `protobuf:"bytes,3,opt,name=listTime" json:"listTime,omitempty"`             // 上市日期字符串
	ListTimestamp *float64               `protobuf:"fixed64,4,opt,name=listTimestamp" json:"listTimestamp,omitempty"` // 上市日期时间戳
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BasicIpoData) Reset() {
	*x = BasicIpoData{}
	mi := &file_qot_Qot_GetIpoList_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BasicIpoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicIpoData) ProtoMessage() {}

func (x *BasicIpoData) ProtoReflect() protoreflect.Message {
	mi := &file_qot_Qot_GetIpoList_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicIpoData.ProtoReflect.Descriptor instead.
func (*BasicIpoData) Descriptor() ([]byte, []int) {
	return file_qot_Qot_GetIpoList_proto_rawDescGZIP(), []int{0}
}

func (x *BasicIpoData) GetSecurity() *common.Security {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *BasicIpoData) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *BasicIpoData) GetListTime() string {
	if x != nil && x.ListTime != nil {
		return *x.ListTime
	}
	return ""
}

func (x *BasicIpoData) GetListTimestamp() float64 {
	if x != nil && x.ListTimestamp != nil {
		return *x.ListTimestamp
	}
	return 0
}

// A股Ipo列表额外数据
type CNIpoExData struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	ApplyCode              *string                `protobuf:"bytes,1,req,name=applyCode" json:"applyCode,omitempty"`                            // 申购代码
	IssueSize              *int64                 `protobuf:"varint,2,req,name=issueSize" json:"issueSize,omitempty"`                           // 发行总数
	OnlineIssueSize        *int64                 `protobuf:"varint,3,req,name=onlineIssueSize" json:"onlineIssueSize,omitempty"`               // 网上发行量
	ApplyUpperLimit        *int64                 `protobuf:"varint,4,req,name=applyUpperLimit" json:"applyUpperLimit,omitempty"`               // 申购上限
	ApplyLimitMarketValue  *int64                 `protobuf:"varint,5,req,name=applyLimitMarketValue" json:"applyLimitMarketValue,omitempty"`   // 顶格申购需配市值
	IsEstimateIpoPrice     *bool                  `protobuf:"varint,6,req,name=isEstimateIpoPrice" json:"isEstimateIpoPrice,omitempty"`         // 是否预估发行价
	IpoPrice               *float64               `protobuf:"fixed64,7,req,name=ipoPrice" json:"ipoPrice,omitempty"`                            // 发行价 预估值会因为募集资金、发行数量、发行费用等数据变动而变动，仅供参考。实际数据公布后会第一时间更新。
	IndustryPeRate         *float64               `protobuf:"fixed64,8,req,name=industryPeRate" json:"industryPeRate,omitempty"`                // 行业市盈率
	IsEstimateWinningRatio *bool                  `protobuf:"varint,9,req,name=isEstimateWinningRatio" json:"isEstimateWinningRatio,omitempty"` // 是否预估中签率
	WinningRatio           *float64               `protobuf:"fixed64,10,req,name=winningRatio" json:"winningRatio,omitempty"`                   // 中签率 该字段为百分比字段，默认不展示%，如20实际对应20%。预估值会因为募集资金、发行数量、发行费用等数据变动而变动，仅供参考。实际数据公布后会第一时间更新。
	IssuePeRate            *float64               `protobuf:"fixed64,11,req,name=issuePeRate" json:"issuePeRate,omitempty"`                     // 发行市盈率
	ApplyTime              *string                `protobuf:"bytes,12,opt,name=applyTime" json:"applyTime,omitempty"`                           // 申购日期字符串
	ApplyTimestamp         *float64               `protobuf:"fixed64,13,opt,name=applyTimestamp" json:"applyTimestamp,omitempty"`               // 申购日期时间戳
	WinningTime            *string                `protobuf:"bytes,14,opt,name=winningTime" json:"winningTime,omitempty"`                       // 公布中签日期字符串
	WinningTimestamp       *float64               `protobuf:"fixed64,15,opt,name=winningTimestamp" json:"winningTimestamp,omitempty"`           // 公布中签日期时间戳
	IsHasWon               *bool                  `protobuf:"varint,16,req,name=isHasWon" json:"isHasWon,omitempty"`                            // 是否已经公布中签号
	WinningNumData         []*WinningNumData      `protobuf:"bytes,17,rep,name=winningNumData" json:"winningNumData,omitempty"`                 // Qot_GetIpoList::WinningNumData 中签号数据，对应PC中"公布中签日期的已公布"
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CNIpoExData) Reset() {
	*x = CNIpoExData{}
	mi := &file_qot_Qot_GetIpoList_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CNIpoExData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CNIpoExData) ProtoMessage() {}

func (x *CNIpoExData) ProtoReflect() protoreflect.Message {
	mi := &file_qot_Qot_GetIpoList_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CNIpoExData.ProtoReflect.Descriptor instead.
func (*CNIpoExData) Descriptor() ([]byte, []int) {
	return file_qot_Qot_GetIpoList_proto_rawDescGZIP(), []int{1}
}

func (x *CNIpoExData) GetApplyCode() string {
	if x != nil && x.ApplyCode != nil {
		return *x.ApplyCode
	}
	return ""
}

func (x *CNIpoExData) GetIssueSize() int64 {
	if x != nil && x.IssueSize != nil {
		return *x.IssueSize
	}
	return 0
}

func (x *CNIpoExData) GetOnlineIssueSize() int64 {
	if x != nil && x.OnlineIssueSize != nil {
		return *x.OnlineIssueSize
	}
	return 0
}

func (x *CNIpoExData) GetApplyUpperLimit() int64 {
	if x != nil && x.ApplyUpperLimit != nil {
		return *x.ApplyUpperLimit
	}
	return 0
}

func (x *CNIpoExData) GetApplyLimitMarketValue() int64 {
	if x != nil && x.ApplyLimitMarketValue != nil {
		return *x.ApplyLimitMarketValue
	}
	return 0
}

func (x *CNIpoExData) GetIsEstimateIpoPrice() bool {
	if x != nil && x.IsEstimateIpoPrice != nil {
		return *x.IsEstimateIpoPrice
	}
	return false
}

func (x *CNIpoExData) GetIpoPrice() float64 {
	if x != nil && x.IpoPrice != nil {
		return *x.IpoPrice
	}
	return 0
}

func (x *CNIpoExData) GetIndustryPeRate() float64 {
	if x != nil && x.IndustryPeRate != nil {
		return *x.IndustryPeRate
	}
	return 0
}

func (x *CNIpoExData) GetIsEstimateWinningRatio() bool {
	if x != nil && x.IsEstimateWinningRatio != nil {
		return *x.IsEstimateWinningRatio
	}
	return false
}

func (x *CNIpoExData) GetWinningRatio() float64 {
	if x != nil && x.WinningRatio != nil {
		return *x.WinningRatio
	}
	return 0
}

func (x *CNIpoExData) GetIssuePeRate() float64 {
	if x != nil && x.IssuePeRate != nil {
		return *x.IssuePeRate
	}
	return 0
}

func (x *CNIpoExData) GetApplyTime() string {
	if x != nil && x.ApplyTime != nil {
		return *x.ApplyTime
	}
	return ""
}

func (x *CNIpoExData) GetApplyTimestamp() float64 {
	if x != nil && x.ApplyTimestamp != nil {
		return *x.ApplyTimestamp
	}
	return 0
}

func (x *CNIpoExData) GetWinningTime() string {
	if x != nil && x.WinningTime != nil {
		return *x.WinningTime
	}
	return ""
}

func (x *CNIpoExData) GetWinningTimestamp() float64 {
	if x != nil && x.WinningTimestamp != nil {
		return *x.WinningTimestamp
	}
	return 0
}

func (x *CNIpoExData) GetIsHasWon() bool {
	if x != nil && x.IsHasWon != nil {
		return *x.IsHasWon
	}
	return false
}

func (x *CNIpoExData) GetWinningNumData() []*WinningNumData {
	if x != nil {
		return x.WinningNumData
	}
	return nil
}

// 中签号数据
type WinningNumData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WinningName   *string                `protobuf:"bytes,1,req,name=winningName" json:"winningName,omitempty"` // 分组名
	WinningInfo   *string                `protobuf:"bytes,2,req,name=winningInfo" json:"winningInfo,omitempty"` // 中签号信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WinningNumData) Reset() {
	*x = WinningNumData{}
	mi := &file_qot_Qot_GetIpoList_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WinningNumData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WinningNumData) ProtoMessage() {}

func (x *WinningNumData) ProtoReflect() protoreflect.Message {
	mi := &file_qot_Qot_GetIpoList_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WinningNumData.ProtoReflect.Descriptor instead.
func (*WinningNumData) Descriptor() ([]byte, []int) {
	return file_qot_Qot_GetIpoList_proto_rawDescGZIP(), []int{2}
}

func (x *WinningNumData) GetWinningName() string {
	if x != nil && x.WinningName != nil {
		return *x.WinningName
	}
	return ""
}

func (x *WinningNumData) GetWinningInfo() string {
	if x != nil && x.WinningInfo != nil {
		return *x.WinningInfo
	}
	return ""
}

// 港股Ipo列表额外数据
type HKIpoExData struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	IpoPriceMin       *float64               `protobuf:"fixed64,1,req,name=ipoPriceMin" json:"ipoPriceMin,omitempty"`             // 最低发售价
	IpoPriceMax       *float64               `protobuf:"fixed64,2,req,name=ipoPriceMax" json:"ipoPriceMax,omitempty"`             // 最高发售价
	ListPrice         *float64               `protobuf:"fixed64,3,req,name=listPrice" json:"listPrice,omitempty"`                 // 上市价
	LotSize           *int32                 `protobuf:"varint,4,req,name=lotSize" json:"lotSize,omitempty"`                      // 每手股数
	EntrancePrice     *float64               `protobuf:"fixed64,5,req,name=entrancePrice" json:"entrancePrice,omitempty"`         // 入场费
	IsSubscribeStatus *bool                  `protobuf:"varint,6,req,name=isSubscribeStatus" json:"isSubscribeStatus,omitempty"`  // 是否为认购状态，True-认购中，False-待上市
	ApplyEndTime      *string                `protobuf:"bytes,7,opt,name=applyEndTime" json:"applyEndTime,omitempty"`             // 截止认购日期字符串
	ApplyEndTimestamp *float64               `protobuf:"fixed64,8,opt,name=applyEndTimestamp" json:"applyEndTimestamp,omitempty"` // 截止认购日期时间戳 因需处理认购手续，富途认购截止时间会早于交易所公布的日期。
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *HKIpoExData) Reset() {
	*x = HKIpoExData{}
	mi := &file_qot_Qot_GetIpoList_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HKIpoExData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HKIpoExData) ProtoMessage() {}

func (x *HKIpoExData) ProtoReflect() protoreflect.Message {
	mi := &file_qot_Qot_GetIpoList_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HKIpoExData.ProtoReflect.Descriptor instead.
func (*HKIpoExData) Descriptor() ([]byte, []int) {
	return file_qot_Qot_GetIpoList_proto_rawDescGZIP(), []int{3}
}

func (x *HKIpoExData) GetIpoPriceMin() float64 {
	if x != nil && x.IpoPriceMin != nil {
		return *x.IpoPriceMin
	}
	return 0
}

func (x *HKIpoExData) GetIpoPriceMax() float64 {
	if x != nil && x.IpoPriceMax != nil {
		return *x.IpoPriceMax
	}
	return 0
}

func (x *HKIpoExData) GetListPrice() float64 {
	if x != nil && x.ListPrice != nil {
		return *x.ListPrice
	}
	return 0
}

func (x *HKIpoExData) GetLotSize() int32 {
	if x != nil && x.LotSize != nil {
		return *x.LotSize
	}
	return 0
}

func (x *HKIpoExData) GetEntrancePrice() float64 {
	if x != nil && x.EntrancePrice != nil {
		return *x.EntrancePrice
	}
	return 0
}

func (x *HKIpoExData) GetIsSubscribeStatus() bool {
	if x != nil && x.IsSubscribeStatus != nil {
		return *x.IsSubscribeStatus
	}
	return false
}

func (x *HKIpoExData) GetApplyEndTime() string {
	if x != nil && x.ApplyEndTime != nil {
		return *x.ApplyEndTime
	}
	return ""
}

func (x *HKIpoExData) GetApplyEndTimestamp() float64 {
	if x != nil && x.ApplyEndTimestamp != nil {
		return *x.ApplyEndTimestamp
	}
	return 0
}

// 美股Ipo列表额外数据
type USIpoExData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IpoPriceMin   *float64               `protobuf:"fixed64,1,req,name=ipoPriceMin" json:"ipoPriceMin,omitempty"` // 最低发行价
	IpoPriceMax   *float64               `protobuf:"fixed64,2,req,name=ipoPriceMax" json:"ipoPriceMax,omitempty"` // 最高发行价
	IssueSize     *int64                 `protobuf:"varint,3,req,name=issueSize" json:"issueSize,omitempty"`      // 发行量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *USIpoExData) Reset() {
	*x = USIpoExData{}
	mi := &file_qot_Qot_GetIpoList_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *USIpoExData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*USIpoExData) ProtoMessage() {}

func (x *USIpoExData) ProtoReflect() protoreflect.Message {
	mi := &file_qot_Qot_GetIpoList_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use USIpoExData.ProtoReflect.Descriptor instead.
func (*USIpoExData) Descriptor() ([]byte, []int) {
	return file_qot_Qot_GetIpoList_proto_rawDescGZIP(), []int{4}
}

func (x *USIpoExData) GetIpoPriceMin() float64 {
	if x != nil && x.IpoPriceMin != nil {
		return *x.IpoPriceMin
	}
	return 0
}

func (x *USIpoExData) GetIpoPriceMax() float64 {
	if x != nil && x.IpoPriceMax != nil {
		return *x.IpoPriceMax
	}
	return 0
}

func (x *USIpoExData) GetIssueSize() int64 {
	if x != nil && x.IssueSize != nil {
		return *x.IssueSize
	}
	return 0
}

// 新股Ipo数据
type IpoData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Basic         *BasicIpoData          `protobuf:"bytes,1,req,name=basic" json:"basic,omitempty"`       // IPO基本数据
	CnExData      *CNIpoExData           `protobuf:"bytes,2,opt,name=cnExData" json:"cnExData,omitempty"` // A股IPO额外数据
	HkExData      *HKIpoExData           `protobuf:"bytes,3,opt,name=hkExData" json:"hkExData,omitempty"` // 港股IPO额外数据
	UsExData      *USIpoExData           `protobuf:"bytes,4,opt,name=usExData" json:"usExData,omitempty"` // 美股IPO额外数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IpoData) Reset() {
	*x = IpoData{}
	mi := &file_qot_Qot_GetIpoList_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IpoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpoData) ProtoMessage() {}

func (x *IpoData) ProtoReflect() protoreflect.Message {
	mi := &file_qot_Qot_GetIpoList_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpoData.ProtoReflect.Descriptor instead.
func (*IpoData) Descriptor() ([]byte, []int) {
	return file_qot_Qot_GetIpoList_proto_rawDescGZIP(), []int{5}
}

func (x *IpoData) GetBasic() *BasicIpoData {
	if x != nil {
		return x.Basic
	}
	return nil
}

func (x *IpoData) GetCnExData() *CNIpoExData {
	if x != nil {
		return x.CnExData
	}
	return nil
}

func (x *IpoData) GetHkExData() *HKIpoExData {
	if x != nil {
		return x.HkExData
	}
	return nil
}

func (x *IpoData) GetUsExData() *USIpoExData {
	if x != nil {
		return x.UsExData
	}
	return nil
}

type C2S struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Market        *int32                 `protobuf:"varint,1,req,name=market" json:"market,omitempty"` // Qot_Common::QotMarket股票市场，支持沪股和深股，且沪股和深股不做区分都代表A股市场。
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *C2S) Reset() {
	*x = C2S{}
	mi := &file_qot_Qot_GetIpoList_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *C2S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S) ProtoMessage() {}

func (x *C2S) ProtoReflect() protoreflect.Message {
	mi := &file_qot_Qot_GetIpoList_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S.ProtoReflect.Descriptor instead.
func (*C2S) Descriptor() ([]byte, []int) {
	return file_qot_Qot_GetIpoList_proto_rawDescGZIP(), []int{6}
}

func (x *C2S) GetMarket() int32 {
	if x != nil && x.Market != nil {
		return *x.Market
	}
	return 0
}

type S2C struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IpoList       []*IpoData             `protobuf:"bytes,1,rep,name=ipoList" json:"ipoList,omitempty"` // 新股IPO数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S2C) Reset() {
	*x = S2C{}
	mi := &file_qot_Qot_GetIpoList_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S2C) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C) ProtoMessage() {}

func (x *S2C) ProtoReflect() protoreflect.Message {
	mi := &file_qot_Qot_GetIpoList_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C.ProtoReflect.Descriptor instead.
func (*S2C) Descriptor() ([]byte, []int) {
	return file_qot_Qot_GetIpoList_proto_rawDescGZIP(), []int{7}
}

func (x *S2C) GetIpoList() []*IpoData {
	if x != nil {
		return x.IpoList
	}
	return nil
}

type Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	C2S           *C2S                   `protobuf:"bytes,1,req,name=c2s" json:"c2s,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_qot_Qot_GetIpoList_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_qot_Qot_GetIpoList_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_qot_Qot_GetIpoList_proto_rawDescGZIP(), []int{8}
}

func (x *Request) GetC2S() *C2S {
	if x != nil {
		return x.C2S
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RetType       *int32                 `protobuf:"varint,1,req,name=retType,def=-400" json:"retType,omitempty"` //RetType,返回结果
	RetMsg        *string                `protobuf:"bytes,2,opt,name=retMsg" json:"retMsg,omitempty"`
	ErrCode       *int32                 `protobuf:"varint,3,opt,name=errCode" json:"errCode,omitempty"`
	S2C           *S2C                   `protobuf:"bytes,4,opt,name=s2c" json:"s2c,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for Response fields.
const (
	Default_Response_RetType = int32(-400)
)

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_qot_Qot_GetIpoList_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_qot_Qot_GetIpoList_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_qot_Qot_GetIpoList_proto_rawDescGZIP(), []int{9}
}

func (x *Response) GetRetType() int32 {
	if x != nil && x.RetType != nil {
		return *x.RetType
	}
	return Default_Response_RetType
}

func (x *Response) GetRetMsg() string {
	if x != nil && x.RetMsg != nil {
		return *x.RetMsg
	}
	return ""
}

func (x *Response) GetErrCode() int32 {
	if x != nil && x.ErrCode != nil {
		return *x.ErrCode
	}
	return 0
}

func (x *Response) GetS2C() *S2C {
	if x != nil {
		return x.S2C
	}
	return nil
}

var File_qot_Qot_GetIpoList_proto protoreflect.FileDescriptor

const file_qot_Qot_GetIpoList_proto_rawDesc = "" +
	"\n" +
	"\x18qot/Qot_GetIpoList.proto\x12\x0eQot_GetIpoList\x1a\x13common/Common.proto\x1a\x14qot/Qot_Common.proto\"\x96\x01\n" +
	"\fBasicIpoData\x120\n" +
	"\bsecurity\x18\x01 \x02(\v2\x14.Qot_Common.SecurityR\bsecurity\x12\x12\n" +
	"\x04name\x18\x02 \x02(\tR\x04name\x12\x1a\n" +
	"\blistTime\x18\x03 \x01(\tR\blistTime\x12$\n" +
	"\rlistTimestamp\x18\x04 \x01(\x01R\rlistTimestamp\"\xbd\x05\n" +
	"\vCNIpoExData\x12\x1c\n" +
	"\tapplyCode\x18\x01 \x02(\tR\tapplyCode\x12\x1c\n" +
	"\tissueSize\x18\x02 \x02(\x03R\tissueSize\x12(\n" +
	"\x0fonlineIssueSize\x18\x03 \x02(\x03R\x0fonlineIssueSize\x12(\n" +
	"\x0fapplyUpperLimit\x18\x04 \x02(\x03R\x0fapplyUpperLimit\x124\n" +
	"\x15applyLimitMarketValue\x18\x05 \x02(\x03R\x15applyLimitMarketValue\x12.\n" +
	"\x12isEstimateIpoPrice\x18\x06 \x02(\bR\x12isEstimateIpoPrice\x12\x1a\n" +
	"\bipoPrice\x18\a \x02(\x01R\bipoPrice\x12&\n" +
	"\x0eindustryPeRate\x18\b \x02(\x01R\x0eindustryPeRate\x126\n" +
	"\x16isEstimateWinningRatio\x18\t \x02(\bR\x16isEstimateWinningRatio\x12\"\n" +
	"\fwinningRatio\x18\n" +
	" \x02(\x01R\fwinningRatio\x12 \n" +
	"\vissuePeRate\x18\v \x02(\x01R\vissuePeRate\x12\x1c\n" +
	"\tapplyTime\x18\f \x01(\tR\tapplyTime\x12&\n" +
	"\x0eapplyTimestamp\x18\r \x01(\x01R\x0eapplyTimestamp\x12 \n" +
	"\vwinningTime\x18\x0e \x01(\tR\vwinningTime\x12*\n" +
	"\x10winningTimestamp\x18\x0f \x01(\x01R\x10winningTimestamp\x12\x1a\n" +
	"\bisHasWon\x18\x10 \x02(\bR\bisHasWon\x12F\n" +
	"\x0ewinningNumData\x18\x11 \x03(\v2\x1e.Qot_GetIpoList.WinningNumDataR\x0ewinningNumData\"T\n" +
	"\x0eWinningNumData\x12 \n" +
	"\vwinningName\x18\x01 \x02(\tR\vwinningName\x12 \n" +
	"\vwinningInfo\x18\x02 \x02(\tR\vwinningInfo\"\xaf\x02\n" +
	"\vHKIpoExData\x12 \n" +
	"\vipoPriceMin\x18\x01 \x02(\x01R\vipoPriceMin\x12 \n" +
	"\vipoPriceMax\x18\x02 \x02(\x01R\vipoPriceMax\x12\x1c\n" +
	"\tlistPrice\x18\x03 \x02(\x01R\tlistPrice\x12\x18\n" +
	"\alotSize\x18\x04 \x02(\x05R\alotSize\x12$\n" +
	"\rentrancePrice\x18\x05 \x02(\x01R\rentrancePrice\x12,\n" +
	"\x11isSubscribeStatus\x18\x06 \x02(\bR\x11isSubscribeStatus\x12\"\n" +
	"\fapplyEndTime\x18\a \x01(\tR\fapplyEndTime\x12,\n" +
	"\x11applyEndTimestamp\x18\b \x01(\x01R\x11applyEndTimestamp\"o\n" +
	"\vUSIpoExData\x12 \n" +
	"\vipoPriceMin\x18\x01 \x02(\x01R\vipoPriceMin\x12 \n" +
	"\vipoPriceMax\x18\x02 \x02(\x01R\vipoPriceMax\x12\x1c\n" +
	"\tissueSize\x18\x03 \x02(\x03R\tissueSize\"\xe8\x01\n" +
	"\aIpoData\x122\n" +
	"\x05basic\x18\x01 \x02(\v2\x1c.Qot_GetIpoList.BasicIpoDataR\x05basic\x127\n" +
	"\bcnExData\x18\x02 \x01(\v2\x1b.Qot_GetIpoList.CNIpoExDataR\bcnExData\x127\n" +
	"\bhkExData\x18\x03 \x01(\v2\x1b.Qot_GetIpoList.HKIpoExDataR\bhkExData\x127\n" +
	"\busExData\x18\x04 \x01(\v2\x1b.Qot_GetIpoList.USIpoExDataR\busExData\"\x1d\n" +
	"\x03C2S\x12\x16\n" +
	"\x06market\x18\x01 \x02(\x05R\x06market\"8\n" +
	"\x03S2C\x121\n" +
	"\aipoList\x18\x01 \x03(\v2\x17.Qot_GetIpoList.IpoDataR\aipoList\"0\n" +
	"\aRequest\x12%\n" +
	"\x03c2s\x18\x01 \x02(\v2\x13.Qot_GetIpoList.C2SR\x03c2s\"\x83\x01\n" +
	"\bResponse\x12\x1e\n" +
	"\aretType\x18\x01 \x02(\x05:\x04-400R\aretType\x12\x16\n" +
	"\x06retMsg\x18\x02 \x01(\tR\x06retMsg\x12\x18\n" +
	"\aerrCode\x18\x03 \x01(\x05R\aerrCode\x12%\n" +
	"\x03s2c\x18\x04 \x01(\v2\x13.Qot_GetIpoList.S2CR\x03s2cBH\n" +
	"\x13com.futu.openapi.pbZ1github.com/qtopie/gofutuapi/gen/qot/qotgetipolist"

var (
	file_qot_Qot_GetIpoList_proto_rawDescOnce sync.Once
	file_qot_Qot_GetIpoList_proto_rawDescData []byte
)

func file_qot_Qot_GetIpoList_proto_rawDescGZIP() []byte {
	file_qot_Qot_GetIpoList_proto_rawDescOnce.Do(func() {
		file_qot_Qot_GetIpoList_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_qot_Qot_GetIpoList_proto_rawDesc), len(file_qot_Qot_GetIpoList_proto_rawDesc)))
	})
	return file_qot_Qot_GetIpoList_proto_rawDescData
}

var file_qot_Qot_GetIpoList_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_qot_Qot_GetIpoList_proto_goTypes = []any{
	(*BasicIpoData)(nil),    // 0: Qot_GetIpoList.BasicIpoData
	(*CNIpoExData)(nil),     // 1: Qot_GetIpoList.CNIpoExData
	(*WinningNumData)(nil),  // 2: Qot_GetIpoList.WinningNumData
	(*HKIpoExData)(nil),     // 3: Qot_GetIpoList.HKIpoExData
	(*USIpoExData)(nil),     // 4: Qot_GetIpoList.USIpoExData
	(*IpoData)(nil),         // 5: Qot_GetIpoList.IpoData
	(*C2S)(nil),             // 6: Qot_GetIpoList.C2S
	(*S2C)(nil),             // 7: Qot_GetIpoList.S2C
	(*Request)(nil),         // 8: Qot_GetIpoList.Request
	(*Response)(nil),        // 9: Qot_GetIpoList.Response
	(*common.Security)(nil), // 10: Qot_Common.Security
}
var file_qot_Qot_GetIpoList_proto_depIdxs = []int32{
	10, // 0: Qot_GetIpoList.BasicIpoData.security:type_name -> Qot_Common.Security
	2,  // 1: Qot_GetIpoList.CNIpoExData.winningNumData:type_name -> Qot_GetIpoList.WinningNumData
	0,  // 2: Qot_GetIpoList.IpoData.basic:type_name -> Qot_GetIpoList.BasicIpoData
	1,  // 3: Qot_GetIpoList.IpoData.cnExData:type_name -> Qot_GetIpoList.CNIpoExData
	3,  // 4: Qot_GetIpoList.IpoData.hkExData:type_name -> Qot_GetIpoList.HKIpoExData
	4,  // 5: Qot_GetIpoList.IpoData.usExData:type_name -> Qot_GetIpoList.USIpoExData
	5,  // 6: Qot_GetIpoList.S2C.ipoList:type_name -> Qot_GetIpoList.IpoData
	6,  // 7: Qot_GetIpoList.Request.c2s:type_name -> Qot_GetIpoList.C2S
	7,  // 8: Qot_GetIpoList.Response.s2c:type_name -> Qot_GetIpoList.S2C
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_qot_Qot_GetIpoList_proto_init() }
func file_qot_Qot_GetIpoList_proto_init() {
	if File_qot_Qot_GetIpoList_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_qot_Qot_GetIpoList_proto_rawDesc), len(file_qot_Qot_GetIpoList_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_qot_Qot_GetIpoList_proto_goTypes,
		DependencyIndexes: file_qot_Qot_GetIpoList_proto_depIdxs,
		MessageInfos:      file_qot_Qot_GetIpoList_proto_msgTypes,
	}.Build()
	File_qot_Qot_GetIpoList_proto = out.File
	file_qot_Qot_GetIpoList_proto_goTypes = nil
	file_qot_Qot_GetIpoList_proto_depIdxs = nil
}
