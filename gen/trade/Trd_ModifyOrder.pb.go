// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: trade/Trd_ModifyOrder.proto

package trdmodifyorder

import (
	common1 "./trd/common"
	common "github.com/qtopie/gofutuapi/gen/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type C2S struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PacketID      *common.PacketID       `protobuf:"bytes,1,req,name=packetID" json:"packetID,omitempty"`            //交易写操作防重放攻击
	Header        *common1.TrdHeader     `protobuf:"bytes,2,req,name=header" json:"header,omitempty"`                //交易公共参数头
	OrderID       *uint64                `protobuf:"varint,3,req,name=orderID" json:"orderID,omitempty"`             //订单号，forAll为true时，传0
	ModifyOrderOp *int32                 `protobuf:"varint,4,req,name=modifyOrderOp" json:"modifyOrderOp,omitempty"` //修改操作类型，参见Trd_Common.ModifyOrderOp的枚举定义
	ForAll        *bool                  `protobuf:"varint,5,opt,name=forAll" json:"forAll,omitempty"`               //是否对此业务账户的全部订单操作，true是，false否(对单个订单)，无此字段代表false，仅对单个订单
	TrdMarket     *int32                 `protobuf:"varint,6,opt,name=trdMarket" json:"trdMarket,omitempty"`         //指定市场，全部撤单时才需要
	// 下面的字段仅针对单个订单，且modifyOrderOp为ModifyOrderOp_Normal有效
	Qty   *float64 `protobuf:"fixed64,8,opt,name=qty" json:"qty,omitempty"`     //数量，期权单位是"张"（精确到小数点后 0 位，超出部分会被舍弃）
	Price *float64 `protobuf:"fixed64,9,opt,name=price" json:"price,omitempty"` //价格，（证券账户精确到小数点后 3 位，期货账户精确到小数点后 9 位，超出部分会被舍弃）
	// 以下为调整价格使用，都传才有效，对港、A股有意义，因为港股有价位，A股2位精度，美股可不传
	AdjustPrice        *bool    `protobuf:"varint,10,opt,name=adjustPrice" json:"adjustPrice,omitempty"`                //是否调整价格，如果价格不合法，是否调整到合法价位，true调整，false不调整
	AdjustSideAndLimit *float64 `protobuf:"fixed64,11,opt,name=adjustSideAndLimit" json:"adjustSideAndLimit,omitempty"` //调整方向和调整幅度百分比限制，正数代表向上调整，负数代表向下调整，具体值代表调整幅度限制，如：0.015代表向上调整且幅度不超过1.5%；-0.01代表向下调整且幅度不超过1%
	AuxPrice           *float64 `protobuf:"fixed64,12,opt,name=auxPrice" json:"auxPrice,omitempty"`                     //触发价格
	TrailType          *int32   `protobuf:"varint,13,opt,name=trailType" json:"trailType,omitempty"`                    //跟踪类型, 参见Trd_Common.TrailType的枚举定义
	TrailValue         *float64 `protobuf:"fixed64,14,opt,name=trailValue" json:"trailValue,omitempty"`                 //跟踪金额/百分比
	TrailSpread        *float64 `protobuf:"fixed64,15,opt,name=trailSpread" json:"trailSpread,omitempty"`               //指定价差
	OrderIDEx          *string  `protobuf:"bytes,16,opt,name=orderIDEx" json:"orderIDEx,omitempty"`                     //表示服务器订单id，可以用来代替orderID，和orderID二选一
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *C2S) Reset() {
	*x = C2S{}
	mi := &file_trade_Trd_ModifyOrder_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *C2S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S) ProtoMessage() {}

func (x *C2S) ProtoReflect() protoreflect.Message {
	mi := &file_trade_Trd_ModifyOrder_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S.ProtoReflect.Descriptor instead.
func (*C2S) Descriptor() ([]byte, []int) {
	return file_trade_Trd_ModifyOrder_proto_rawDescGZIP(), []int{0}
}

func (x *C2S) GetPacketID() *common.PacketID {
	if x != nil {
		return x.PacketID
	}
	return nil
}

func (x *C2S) GetHeader() *common1.TrdHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *C2S) GetOrderID() uint64 {
	if x != nil && x.OrderID != nil {
		return *x.OrderID
	}
	return 0
}

func (x *C2S) GetModifyOrderOp() int32 {
	if x != nil && x.ModifyOrderOp != nil {
		return *x.ModifyOrderOp
	}
	return 0
}

func (x *C2S) GetForAll() bool {
	if x != nil && x.ForAll != nil {
		return *x.ForAll
	}
	return false
}

func (x *C2S) GetTrdMarket() int32 {
	if x != nil && x.TrdMarket != nil {
		return *x.TrdMarket
	}
	return 0
}

func (x *C2S) GetQty() float64 {
	if x != nil && x.Qty != nil {
		return *x.Qty
	}
	return 0
}

func (x *C2S) GetPrice() float64 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *C2S) GetAdjustPrice() bool {
	if x != nil && x.AdjustPrice != nil {
		return *x.AdjustPrice
	}
	return false
}

func (x *C2S) GetAdjustSideAndLimit() float64 {
	if x != nil && x.AdjustSideAndLimit != nil {
		return *x.AdjustSideAndLimit
	}
	return 0
}

func (x *C2S) GetAuxPrice() float64 {
	if x != nil && x.AuxPrice != nil {
		return *x.AuxPrice
	}
	return 0
}

func (x *C2S) GetTrailType() int32 {
	if x != nil && x.TrailType != nil {
		return *x.TrailType
	}
	return 0
}

func (x *C2S) GetTrailValue() float64 {
	if x != nil && x.TrailValue != nil {
		return *x.TrailValue
	}
	return 0
}

func (x *C2S) GetTrailSpread() float64 {
	if x != nil && x.TrailSpread != nil {
		return *x.TrailSpread
	}
	return 0
}

func (x *C2S) GetOrderIDEx() string {
	if x != nil && x.OrderIDEx != nil {
		return *x.OrderIDEx
	}
	return ""
}

type S2C struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *common1.TrdHeader     `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`       //交易公共参数头
	OrderID       *uint64                `protobuf:"varint,2,req,name=orderID" json:"orderID,omitempty"`    //订单号
	OrderIDEx     *string                `protobuf:"bytes,3,opt,name=orderIDEx" json:"orderIDEx,omitempty"` //服务器订单id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S2C) Reset() {
	*x = S2C{}
	mi := &file_trade_Trd_ModifyOrder_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S2C) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C) ProtoMessage() {}

func (x *S2C) ProtoReflect() protoreflect.Message {
	mi := &file_trade_Trd_ModifyOrder_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C.ProtoReflect.Descriptor instead.
func (*S2C) Descriptor() ([]byte, []int) {
	return file_trade_Trd_ModifyOrder_proto_rawDescGZIP(), []int{1}
}

func (x *S2C) GetHeader() *common1.TrdHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *S2C) GetOrderID() uint64 {
	if x != nil && x.OrderID != nil {
		return *x.OrderID
	}
	return 0
}

func (x *S2C) GetOrderIDEx() string {
	if x != nil && x.OrderIDEx != nil {
		return *x.OrderIDEx
	}
	return ""
}

type Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	C2S           *C2S                   `protobuf:"bytes,1,req,name=c2s" json:"c2s,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_trade_Trd_ModifyOrder_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_trade_Trd_ModifyOrder_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_trade_Trd_ModifyOrder_proto_rawDescGZIP(), []int{2}
}

func (x *Request) GetC2S() *C2S {
	if x != nil {
		return x.C2S
	}
	return nil
}

type Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 以下3个字段每条协议都有，注释说明在InitConnect.proto中
	RetType       *int32  `protobuf:"varint,1,req,name=retType,def=-400" json:"retType,omitempty"`
	RetMsg        *string `protobuf:"bytes,2,opt,name=retMsg" json:"retMsg,omitempty"`
	ErrCode       *int32  `protobuf:"varint,3,opt,name=errCode" json:"errCode,omitempty"`
	S2C           *S2C    `protobuf:"bytes,4,opt,name=s2c" json:"s2c,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for Response fields.
const (
	Default_Response_RetType = int32(-400)
)

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_trade_Trd_ModifyOrder_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_trade_Trd_ModifyOrder_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_trade_Trd_ModifyOrder_proto_rawDescGZIP(), []int{3}
}

func (x *Response) GetRetType() int32 {
	if x != nil && x.RetType != nil {
		return *x.RetType
	}
	return Default_Response_RetType
}

func (x *Response) GetRetMsg() string {
	if x != nil && x.RetMsg != nil {
		return *x.RetMsg
	}
	return ""
}

func (x *Response) GetErrCode() int32 {
	if x != nil && x.ErrCode != nil {
		return *x.ErrCode
	}
	return 0
}

func (x *Response) GetS2C() *S2C {
	if x != nil {
		return x.S2C
	}
	return nil
}

var File_trade_Trd_ModifyOrder_proto protoreflect.FileDescriptor

const file_trade_Trd_ModifyOrder_proto_rawDesc = "" +
	"\n" +
	"\x1btrade/Trd_ModifyOrder.proto\x12\x0fTrd_ModifyOrder\x1a\x13common/Common.proto\x1a\x16trade/Trd_Common.proto\"\xec\x03\n" +
	"\x03C2S\x12,\n" +
	"\bpacketID\x18\x01 \x02(\v2\x10.Common.PacketIDR\bpacketID\x12-\n" +
	"\x06header\x18\x02 \x02(\v2\x15.Trd_Common.TrdHeaderR\x06header\x12\x18\n" +
	"\aorderID\x18\x03 \x02(\x04R\aorderID\x12$\n" +
	"\rmodifyOrderOp\x18\x04 \x02(\x05R\rmodifyOrderOp\x12\x16\n" +
	"\x06forAll\x18\x05 \x01(\bR\x06forAll\x12\x1c\n" +
	"\ttrdMarket\x18\x06 \x01(\x05R\ttrdMarket\x12\x10\n" +
	"\x03qty\x18\b \x01(\x01R\x03qty\x12\x14\n" +
	"\x05price\x18\t \x01(\x01R\x05price\x12 \n" +
	"\vadjustPrice\x18\n" +
	" \x01(\bR\vadjustPrice\x12.\n" +
	"\x12adjustSideAndLimit\x18\v \x01(\x01R\x12adjustSideAndLimit\x12\x1a\n" +
	"\bauxPrice\x18\f \x01(\x01R\bauxPrice\x12\x1c\n" +
	"\ttrailType\x18\r \x01(\x05R\ttrailType\x12\x1e\n" +
	"\n" +
	"trailValue\x18\x0e \x01(\x01R\n" +
	"trailValue\x12 \n" +
	"\vtrailSpread\x18\x0f \x01(\x01R\vtrailSpread\x12\x1c\n" +
	"\torderIDEx\x18\x10 \x01(\tR\torderIDEx\"l\n" +
	"\x03S2C\x12-\n" +
	"\x06header\x18\x01 \x02(\v2\x15.Trd_Common.TrdHeaderR\x06header\x12\x18\n" +
	"\aorderID\x18\x02 \x02(\x04R\aorderID\x12\x1c\n" +
	"\torderIDEx\x18\x03 \x01(\tR\torderIDEx\"1\n" +
	"\aRequest\x12&\n" +
	"\x03c2s\x18\x01 \x02(\v2\x14.Trd_ModifyOrder.C2SR\x03c2s\"\x84\x01\n" +
	"\bResponse\x12\x1e\n" +
	"\aretType\x18\x01 \x02(\x05:\x04-400R\aretType\x12\x16\n" +
	"\x06retMsg\x18\x02 \x01(\tR\x06retMsg\x12\x18\n" +
	"\aerrCode\x18\x03 \x01(\x05R\aerrCode\x12&\n" +
	"\x03s2c\x18\x04 \x01(\v2\x14.Trd_ModifyOrder.S2CR\x03s2cBK\n" +
	"\x13com.futu.openapi.pbZ4github.com/qtopie/gofutuapi/gen/trade/trdmodifyorder"

var (
	file_trade_Trd_ModifyOrder_proto_rawDescOnce sync.Once
	file_trade_Trd_ModifyOrder_proto_rawDescData []byte
)

func file_trade_Trd_ModifyOrder_proto_rawDescGZIP() []byte {
	file_trade_Trd_ModifyOrder_proto_rawDescOnce.Do(func() {
		file_trade_Trd_ModifyOrder_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_trade_Trd_ModifyOrder_proto_rawDesc), len(file_trade_Trd_ModifyOrder_proto_rawDesc)))
	})
	return file_trade_Trd_ModifyOrder_proto_rawDescData
}

var file_trade_Trd_ModifyOrder_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_trade_Trd_ModifyOrder_proto_goTypes = []any{
	(*C2S)(nil),               // 0: Trd_ModifyOrder.C2S
	(*S2C)(nil),               // 1: Trd_ModifyOrder.S2C
	(*Request)(nil),           // 2: Trd_ModifyOrder.Request
	(*Response)(nil),          // 3: Trd_ModifyOrder.Response
	(*common.PacketID)(nil),   // 4: Common.PacketID
	(*common1.TrdHeader)(nil), // 5: Trd_Common.TrdHeader
}
var file_trade_Trd_ModifyOrder_proto_depIdxs = []int32{
	4, // 0: Trd_ModifyOrder.C2S.packetID:type_name -> Common.PacketID
	5, // 1: Trd_ModifyOrder.C2S.header:type_name -> Trd_Common.TrdHeader
	5, // 2: Trd_ModifyOrder.S2C.header:type_name -> Trd_Common.TrdHeader
	0, // 3: Trd_ModifyOrder.Request.c2s:type_name -> Trd_ModifyOrder.C2S
	1, // 4: Trd_ModifyOrder.Response.s2c:type_name -> Trd_ModifyOrder.S2C
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_trade_Trd_ModifyOrder_proto_init() }
func file_trade_Trd_ModifyOrder_proto_init() {
	if File_trade_Trd_ModifyOrder_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_trade_Trd_ModifyOrder_proto_rawDesc), len(file_trade_Trd_ModifyOrder_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_trade_Trd_ModifyOrder_proto_goTypes,
		DependencyIndexes: file_trade_Trd_ModifyOrder_proto_depIdxs,
		MessageInfos:      file_trade_Trd_ModifyOrder_proto_msgTypes,
	}.Build()
	File_trade_Trd_ModifyOrder_proto = out.File
	file_trade_Trd_ModifyOrder_proto_goTypes = nil
	file_trade_Trd_ModifyOrder_proto_depIdxs = nil
}
