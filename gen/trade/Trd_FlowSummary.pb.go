// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: trade/Trd_FlowSummary.proto

package trdflowsummary

import (
	common "./trd/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TrdCashFlowDirection int32

const (
	TrdCashFlowDirection_TrdCashFlowDirection_Unknown TrdCashFlowDirection = 0 //未知
	TrdCashFlowDirection_TrdCashFlowDirection_In      TrdCashFlowDirection = 1 //现金流入
	TrdCashFlowDirection_TrdCashFlowDirection_Out     TrdCashFlowDirection = 2 //现金流出
)

// Enum value maps for TrdCashFlowDirection.
var (
	TrdCashFlowDirection_name = map[int32]string{
		0: "TrdCashFlowDirection_Unknown",
		1: "TrdCashFlowDirection_In",
		2: "TrdCashFlowDirection_Out",
	}
	TrdCashFlowDirection_value = map[string]int32{
		"TrdCashFlowDirection_Unknown": 0,
		"TrdCashFlowDirection_In":      1,
		"TrdCashFlowDirection_Out":     2,
	}
)

func (x TrdCashFlowDirection) Enum() *TrdCashFlowDirection {
	p := new(TrdCashFlowDirection)
	*p = x
	return p
}

func (x TrdCashFlowDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrdCashFlowDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_trade_Trd_FlowSummary_proto_enumTypes[0].Descriptor()
}

func (TrdCashFlowDirection) Type() protoreflect.EnumType {
	return &file_trade_Trd_FlowSummary_proto_enumTypes[0]
}

func (x TrdCashFlowDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *TrdCashFlowDirection) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = TrdCashFlowDirection(num)
	return nil
}

// Deprecated: Use TrdCashFlowDirection.Descriptor instead.
func (TrdCashFlowDirection) EnumDescriptor() ([]byte, []int) {
	return file_trade_Trd_FlowSummary_proto_rawDescGZIP(), []int{0}
}

type FlowSummaryInfo struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ClearingDate      *string                `protobuf:"bytes,1,opt,name=clearingDate" json:"clearingDate,omitempty"`            //清算日期
	SettlementDate    *string                `protobuf:"bytes,2,opt,name=settlementDate" json:"settlementDate,omitempty"`        //结算日期
	Currency          *int32                 `protobuf:"varint,3,opt,name=currency" json:"currency,omitempty"`                   //币种
	CashFlowType      *string                `protobuf:"bytes,4,opt,name=cashFlowType" json:"cashFlowType,omitempty"`            //现金流类型
	CashFlowDirection *int32                 `protobuf:"varint,5,opt,name=cashFlowDirection" json:"cashFlowDirection,omitempty"` //现金流方向 TrdCashFlowDirection
	CashFlowAmount    *float64               `protobuf:"fixed64,6,opt,name=cashFlowAmount" json:"cashFlowAmount,omitempty"`      //金额
	CashFlowRemark    *string                `protobuf:"bytes,7,opt,name=cashFlowRemark" json:"cashFlowRemark,omitempty"`        // 备注
	CashFlowID        *uint64                `protobuf:"varint,8,opt,name=cashFlowID" json:"cashFlowID,omitempty"`               // 现金流ID
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *FlowSummaryInfo) Reset() {
	*x = FlowSummaryInfo{}
	mi := &file_trade_Trd_FlowSummary_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlowSummaryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowSummaryInfo) ProtoMessage() {}

func (x *FlowSummaryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_trade_Trd_FlowSummary_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowSummaryInfo.ProtoReflect.Descriptor instead.
func (*FlowSummaryInfo) Descriptor() ([]byte, []int) {
	return file_trade_Trd_FlowSummary_proto_rawDescGZIP(), []int{0}
}

func (x *FlowSummaryInfo) GetClearingDate() string {
	if x != nil && x.ClearingDate != nil {
		return *x.ClearingDate
	}
	return ""
}

func (x *FlowSummaryInfo) GetSettlementDate() string {
	if x != nil && x.SettlementDate != nil {
		return *x.SettlementDate
	}
	return ""
}

func (x *FlowSummaryInfo) GetCurrency() int32 {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return 0
}

func (x *FlowSummaryInfo) GetCashFlowType() string {
	if x != nil && x.CashFlowType != nil {
		return *x.CashFlowType
	}
	return ""
}

func (x *FlowSummaryInfo) GetCashFlowDirection() int32 {
	if x != nil && x.CashFlowDirection != nil {
		return *x.CashFlowDirection
	}
	return 0
}

func (x *FlowSummaryInfo) GetCashFlowAmount() float64 {
	if x != nil && x.CashFlowAmount != nil {
		return *x.CashFlowAmount
	}
	return 0
}

func (x *FlowSummaryInfo) GetCashFlowRemark() string {
	if x != nil && x.CashFlowRemark != nil {
		return *x.CashFlowRemark
	}
	return ""
}

func (x *FlowSummaryInfo) GetCashFlowID() uint64 {
	if x != nil && x.CashFlowID != nil {
		return *x.CashFlowID
	}
	return 0
}

type C2S struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Header            *common.TrdHeader      `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`                        //交易公共参数头
	ClearingDate      *string                `protobuf:"bytes,2,req,name=clearingDate" json:"clearingDate,omitempty"`            //清算日期，格式 "2017-05-20"
	CashFlowDirection *int32                 `protobuf:"varint,3,opt,name=cashFlowDirection" json:"cashFlowDirection,omitempty"` //现金流方向 TrdCashFlowDirection
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *C2S) Reset() {
	*x = C2S{}
	mi := &file_trade_Trd_FlowSummary_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *C2S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S) ProtoMessage() {}

func (x *C2S) ProtoReflect() protoreflect.Message {
	mi := &file_trade_Trd_FlowSummary_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S.ProtoReflect.Descriptor instead.
func (*C2S) Descriptor() ([]byte, []int) {
	return file_trade_Trd_FlowSummary_proto_rawDescGZIP(), []int{1}
}

func (x *C2S) GetHeader() *common.TrdHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *C2S) GetClearingDate() string {
	if x != nil && x.ClearingDate != nil {
		return *x.ClearingDate
	}
	return ""
}

func (x *C2S) GetCashFlowDirection() int32 {
	if x != nil && x.CashFlowDirection != nil {
		return *x.CashFlowDirection
	}
	return 0
}

type S2C struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Header              *common.TrdHeader      `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`                           //交易公共参数头
	FlowSummaryInfoList []*FlowSummaryInfo     `protobuf:"bytes,2,rep,name=flowSummaryInfoList" json:"flowSummaryInfoList,omitempty"` //账户资金
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *S2C) Reset() {
	*x = S2C{}
	mi := &file_trade_Trd_FlowSummary_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S2C) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C) ProtoMessage() {}

func (x *S2C) ProtoReflect() protoreflect.Message {
	mi := &file_trade_Trd_FlowSummary_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C.ProtoReflect.Descriptor instead.
func (*S2C) Descriptor() ([]byte, []int) {
	return file_trade_Trd_FlowSummary_proto_rawDescGZIP(), []int{2}
}

func (x *S2C) GetHeader() *common.TrdHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *S2C) GetFlowSummaryInfoList() []*FlowSummaryInfo {
	if x != nil {
		return x.FlowSummaryInfoList
	}
	return nil
}

type Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	C2S           *C2S                   `protobuf:"bytes,1,req,name=c2s" json:"c2s,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_trade_Trd_FlowSummary_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_trade_Trd_FlowSummary_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_trade_Trd_FlowSummary_proto_rawDescGZIP(), []int{3}
}

func (x *Request) GetC2S() *C2S {
	if x != nil {
		return x.C2S
	}
	return nil
}

type Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 以下3个字段每条协议都有，注释说明在InitConnect.proto中
	RetType       *int32  `protobuf:"varint,1,req,name=retType,def=-400" json:"retType,omitempty"`
	RetMsg        *string `protobuf:"bytes,2,opt,name=retMsg" json:"retMsg,omitempty"`
	ErrCode       *int32  `protobuf:"varint,3,opt,name=errCode" json:"errCode,omitempty"`
	S2C           *S2C    `protobuf:"bytes,4,opt,name=s2c" json:"s2c,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for Response fields.
const (
	Default_Response_RetType = int32(-400)
)

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_trade_Trd_FlowSummary_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_trade_Trd_FlowSummary_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_trade_Trd_FlowSummary_proto_rawDescGZIP(), []int{4}
}

func (x *Response) GetRetType() int32 {
	if x != nil && x.RetType != nil {
		return *x.RetType
	}
	return Default_Response_RetType
}

func (x *Response) GetRetMsg() string {
	if x != nil && x.RetMsg != nil {
		return *x.RetMsg
	}
	return ""
}

func (x *Response) GetErrCode() int32 {
	if x != nil && x.ErrCode != nil {
		return *x.ErrCode
	}
	return 0
}

func (x *Response) GetS2C() *S2C {
	if x != nil {
		return x.S2C
	}
	return nil
}

var File_trade_Trd_FlowSummary_proto protoreflect.FileDescriptor

const file_trade_Trd_FlowSummary_proto_rawDesc = "" +
	"\n" +
	"\x1btrade/Trd_FlowSummary.proto\x12\x0fTrd_FlowSummary\x1a\x16trade/Trd_Common.proto\"\xbb\x02\n" +
	"\x0fFlowSummaryInfo\x12\"\n" +
	"\fclearingDate\x18\x01 \x01(\tR\fclearingDate\x12&\n" +
	"\x0esettlementDate\x18\x02 \x01(\tR\x0esettlementDate\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\x05R\bcurrency\x12\"\n" +
	"\fcashFlowType\x18\x04 \x01(\tR\fcashFlowType\x12,\n" +
	"\x11cashFlowDirection\x18\x05 \x01(\x05R\x11cashFlowDirection\x12&\n" +
	"\x0ecashFlowAmount\x18\x06 \x01(\x01R\x0ecashFlowAmount\x12&\n" +
	"\x0ecashFlowRemark\x18\a \x01(\tR\x0ecashFlowRemark\x12\x1e\n" +
	"\n" +
	"cashFlowID\x18\b \x01(\x04R\n" +
	"cashFlowID\"\x86\x01\n" +
	"\x03C2S\x12-\n" +
	"\x06header\x18\x01 \x02(\v2\x15.Trd_Common.TrdHeaderR\x06header\x12\"\n" +
	"\fclearingDate\x18\x02 \x02(\tR\fclearingDate\x12,\n" +
	"\x11cashFlowDirection\x18\x03 \x01(\x05R\x11cashFlowDirection\"\x88\x01\n" +
	"\x03S2C\x12-\n" +
	"\x06header\x18\x01 \x02(\v2\x15.Trd_Common.TrdHeaderR\x06header\x12R\n" +
	"\x13flowSummaryInfoList\x18\x02 \x03(\v2 .Trd_FlowSummary.FlowSummaryInfoR\x13flowSummaryInfoList\"1\n" +
	"\aRequest\x12&\n" +
	"\x03c2s\x18\x01 \x02(\v2\x14.Trd_FlowSummary.C2SR\x03c2s\"\x84\x01\n" +
	"\bResponse\x12\x1e\n" +
	"\aretType\x18\x01 \x02(\x05:\x04-400R\aretType\x12\x16\n" +
	"\x06retMsg\x18\x02 \x01(\tR\x06retMsg\x12\x18\n" +
	"\aerrCode\x18\x03 \x01(\x05R\aerrCode\x12&\n" +
	"\x03s2c\x18\x04 \x01(\v2\x14.Trd_FlowSummary.S2CR\x03s2c*s\n" +
	"\x14TrdCashFlowDirection\x12 \n" +
	"\x1cTrdCashFlowDirection_Unknown\x10\x00\x12\x1b\n" +
	"\x17TrdCashFlowDirection_In\x10\x01\x12\x1c\n" +
	"\x18TrdCashFlowDirection_Out\x10\x02BK\n" +
	"\x13com.futu.openapi.pbZ4github.com/qtopie/gofutuapi/gen/trade/trdflowsummary"

var (
	file_trade_Trd_FlowSummary_proto_rawDescOnce sync.Once
	file_trade_Trd_FlowSummary_proto_rawDescData []byte
)

func file_trade_Trd_FlowSummary_proto_rawDescGZIP() []byte {
	file_trade_Trd_FlowSummary_proto_rawDescOnce.Do(func() {
		file_trade_Trd_FlowSummary_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_trade_Trd_FlowSummary_proto_rawDesc), len(file_trade_Trd_FlowSummary_proto_rawDesc)))
	})
	return file_trade_Trd_FlowSummary_proto_rawDescData
}

var file_trade_Trd_FlowSummary_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_trade_Trd_FlowSummary_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_trade_Trd_FlowSummary_proto_goTypes = []any{
	(TrdCashFlowDirection)(0), // 0: Trd_FlowSummary.TrdCashFlowDirection
	(*FlowSummaryInfo)(nil),   // 1: Trd_FlowSummary.FlowSummaryInfo
	(*C2S)(nil),               // 2: Trd_FlowSummary.C2S
	(*S2C)(nil),               // 3: Trd_FlowSummary.S2C
	(*Request)(nil),           // 4: Trd_FlowSummary.Request
	(*Response)(nil),          // 5: Trd_FlowSummary.Response
	(*common.TrdHeader)(nil),  // 6: Trd_Common.TrdHeader
}
var file_trade_Trd_FlowSummary_proto_depIdxs = []int32{
	6, // 0: Trd_FlowSummary.C2S.header:type_name -> Trd_Common.TrdHeader
	6, // 1: Trd_FlowSummary.S2C.header:type_name -> Trd_Common.TrdHeader
	1, // 2: Trd_FlowSummary.S2C.flowSummaryInfoList:type_name -> Trd_FlowSummary.FlowSummaryInfo
	2, // 3: Trd_FlowSummary.Request.c2s:type_name -> Trd_FlowSummary.C2S
	3, // 4: Trd_FlowSummary.Response.s2c:type_name -> Trd_FlowSummary.S2C
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_trade_Trd_FlowSummary_proto_init() }
func file_trade_Trd_FlowSummary_proto_init() {
	if File_trade_Trd_FlowSummary_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_trade_Trd_FlowSummary_proto_rawDesc), len(file_trade_Trd_FlowSummary_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_trade_Trd_FlowSummary_proto_goTypes,
		DependencyIndexes: file_trade_Trd_FlowSummary_proto_depIdxs,
		EnumInfos:         file_trade_Trd_FlowSummary_proto_enumTypes,
		MessageInfos:      file_trade_Trd_FlowSummary_proto_msgTypes,
	}.Build()
	File_trade_Trd_FlowSummary_proto = out.File
	file_trade_Trd_FlowSummary_proto_goTypes = nil
	file_trade_Trd_FlowSummary_proto_depIdxs = nil
}
